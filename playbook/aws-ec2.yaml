---
- name: AWS EC2 Instance
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: Create ec2 instance
      ec2:
        instance_type: "{{ instance_type }}"
        image: "{{ image }}"
        exact_count: 1
        count_tag:
          Name: "{{ item }}"
        key_name: ansible
        group: all-allow
        wait: true
        region: eu-central-1
        instance_tags:
          Name: "{{ item }}"
          Type: Webserver
      register: ec2
      with_items: "{{ webservers }}"

    - name: Add new instance to host group
      add_host:
        hostname: "{{ item.tagged_instances[0].public_ip }}"
        ansible_host: "{{ item.tagged_instances[0].public_ip }}"
        groups: awswebserver
        ansible_ssh_private_key_file: "{{ ansible_ssh_private_key_file }}"
        ansible_ssh_user: "{{ ansible_ssh_user }}"
      loop: "{{ ec2.results }}"
      loop_control:
        label: "{{ item.tagged_instances[0].public_ip }}"

    - name: Wait for SSH to come up
      wait_for:
        host: "{{ item.tagged_instances[0].public_ip }}"
        port: 22
        state: started
      loop: "{{ ec2.results }}"
      loop_control:
        label: "{{ item.tagged_instances[0].public_ip }}"

    - name: Create ec2 instance
      ec2:
        instance_type: "{{ instance_type }}"
        image: "{{ image }}"
        exact_count: 1
        count_tag:
          Name: "{{ item }}"
        key_name: ansible
        group: all-allow
        wait: true
        region: eu-central-1
        instance_tags:
          Name: "{{ item }}"
      register: ec2
      with_items: "{{ dbservers }}"

    - name: Add new instance to host group
      add_host:
        hostname: "{{ item.tagged_instances[0].public_ip }}"
        ansible_host: "{{ item.tagged_instances[0].public_ip }}"
        groups: awsdbserver
        ansible_ssh_private_key_file: "{{ ansible_ssh_private_key_file }}"
        ansible_ssh_user: "{{ ansible_ssh_user }}"
      loop: "{{ ec2.results }}"
      loop_control:
        label: "{{ item.tagged_instances[0].public_ip }}"

    - name: Wait for SSH to come up
      wait_for:
        host: "{{ item.tagged_instances[0].public_ip }}"
        port: 22
        state: started
      loop: "{{ ec2.results }}"
      loop_control:
        label: "{{ item.tagged_instances[0].public_ip }}"

    - name: Display result
      debug:
        msg:
          # - "{{ ec2.results }}"
          # - "{{ hostvars[groups['awsdbserver'][0]] }}"
          # - "{{ hostvars[groups['awsdbserver'][0]]['ansible_host'] }}"
          # - "{{ item.tagged_instances[0].id }}"
      # loop: "{{ ec2.results }}"
